--- libsvm-3.3/python/libsvm/commonutil.py.orig	2022-08-10 16:06:27.000000000 +0200
+++ libsvm-3.3/python/libsvm/commonutil.py	2023-01-18 06:28:48.186825376 +0100
@@ -1,5 +1,3 @@
-#!/usr/bin/env python
-
 from __future__ import print_function
 from array import array
 import sys
--- libsvm-3.3/python/libsvm/svm.py.orig	2022-08-10 16:06:27.000000000 +0200
+++ libsvm-3.3/python/libsvm/svm.py	2023-01-18 06:29:05.290066053 +0100
@@ -1,5 +1,3 @@
-#!/usr/bin/env python
-
 from ctypes import *
 from ctypes.util import find_library
 from os import path
--- libsvm-3.3/python/libsvm/svmutil.py.orig	2022-08-10 16:06:27.000000000 +0200
+++ libsvm-3.3/python/libsvm/svmutil.py	2023-01-18 06:29:15.500010741 +0100
@@ -1,5 +1,3 @@
-#!/usr/bin/env python
-
 import os, sys
 from .svm import *
 from .svm import __all__ as svm_all
--- libsvm-3.3/python/setup.py.orig	2022-08-10 16:06:27.000000000 +0200
+++ libsvm-3.3/python/setup.py	2023-01-18 06:33:05.588764243 +0100
@@ -76,9 +76,6 @@ class CleanCommand(clean_cmd):
                 rmtree(f)
 
 def main():
-    if not path.exists(cpp_dir):
-        create_cpp_source()
-
     with open("README") as f:
         long_description = f.read()
 
@@ -93,11 +90,6 @@ def main():
         author_email="cjlin@csie.ntu.edu.tw",
         url="https://www.csie.ntu.edu.tw/~cjlin/libsvm",
         install_requires=["scipy"],
-        ext_modules=[
-            Extension(
-                "{}.{}".format(PACKAGE_DIR, dynamic_lib_name), **kwargs_for_extension
-            )
-        ],
         cmdclass={"clean": CleanCommand},
     )
 
--- libsvm-3.3/python/libsvm/svm.py.orig	2023-01-18 06:29:47.973168152 +0100
+++ libsvm-3.3/python/libsvm/svm.py	2023-01-18 06:33:56.125157130 +0100
@@ -23,10 +23,7 @@ __all__ = ['libsvm', 'svm_problem', 'svm
            'SIGMOID', 'c_double', 'svm_model']
 
 try:
-    dirname = path.dirname(path.abspath(__file__))
-    dynamic_lib_name = 'clib.cp*'
-    path_to_so = glob(path.join(dirname, dynamic_lib_name))[0]
-    libsvm = CDLL(path_to_so)
+    libsvm = CDLL("libsvm.so.3")
 except:
     try:
         if sys.platform == 'win32':
